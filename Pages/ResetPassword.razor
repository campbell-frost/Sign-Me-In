@page "/Account/Recovery/{AccountID}/ResetPassword"
@inject Context dbContext
@inject NavigationManager navigationManager
@using Microsoft.EntityFrameworkCore
@inject AuthenticationService authService
@inject IJSRuntime JSRuntime

@code {
    [Parameter]
    public string AccountID { get; set; }
    private string newPassword;
    private string confirmPassword;
    private bool isChanged = false;
    private bool PasswordsMatch => !string.IsNullOrEmpty(newPassword) && !string.IsNullOrEmpty(confirmPassword) && newPassword == confirmPassword;

    private void CheckPasswords()
    {
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        // Only allows the user logged in as manager to view the page
        var currentUser = authService.GetLoggedInUser();

        if (currentUser == null || currentUser.AccountID != 1)
        {
            navigationManager.NavigateTo("/Forbidden");
            return;
        }
    }

    private void resetPassword()
    {
        if (!string.IsNullOrEmpty(newPassword) && !string.IsNullOrEmpty(confirmPassword))
        {
            if (newPassword == confirmPassword)
            {
                var user = dbContext.Accounts.FirstOrDefault(u => u.AccountID == int.Parse(AccountID));

                if (user != null)
                {
                   // Hash the new password
                    string hashedPassword = BCrypt.Net.BCrypt.HashPassword(newPassword);
                    
                    // Update the hashed password in the database
                    user.PasswordHash = hashedPassword;
                    dbContext.SaveChanges();
                    isChanged = true;
                    
                }
                else
                {
                    // if user is not found
                    Console.WriteLine("User not found.");
                }
            }
            else
            {
                // if passwords do not match
                Console.WriteLine("Passwords do not match.");
            }
        }
    }

    private void GoBackToAccounts()
    {
        navigationManager.NavigateTo("/Account");
    }
}

@if (!isChanged)
{
    <div class="container custom-container card shadow-lg py-4">
        <div class="form-group">
            <div class="input-group">
                <div class="row">
                    <div class="col-md-12">
                        <label class="text-start d-block">New Password</label>
                        <input type="password" class="form-control w-100" @bind="@newPassword" @oninput="CheckPasswords" required>
                    </div>
                </div>
            </div>
        </div>
        <div class="input-group">
            <div class="row">
                <div class="row pt-3">
                    <div class="col-md-12">
                        <label class="text-start d-block">Confirm Password</label>
                        <input type="password" class="form-control 1 w-100" @bind="@confirmPassword" @oninput="CheckPasswords" required>
                    </div>
                </div>
            </div>
        </div>

        <!-- Alert for empty fields -->
        @if (string.IsNullOrEmpty(newPassword) || string.IsNullOrEmpty(confirmPassword))
        {
            <div class="alert alert-warning mt-3" role="alert">
                Please fill in both password fields.
            </div>
        }

        <!-- Alert for non-matching passwords -->
        @if (!PasswordsMatch)
        {
            <div class="alert alert-warning mt-3" role="alert">
                Passwords do not match.
            </div>
        }
        <div class="row mt-4">
            <div class="col-md-6">
                <button class="btn btn-primary btn-block" @onclick="GoBackToAccounts">Go Back</button>
            </div>
            <div class="col-md-6">
                <button class="btn btn-primary btn-block" @onclick="resetPassword" disabled="@(!PasswordsMatch)">Reset Password</button>
            </div>
        </div>
    </div>
}

@if (isChanged)
{
    <div class="row px-3 mt-3">
        <div class="alert alert-success mt-3" role="alert">
            Password was successfully changed.
        </div>
    </div>
    <div class="row mt-3 justify-content-center">
        <div class="col-md-12 d-flex justify-content-center">
            <button class="btn btn-primary" @onclick="GoBackToAccounts">Done</button>
        </div>
    </div>
}
