@page "/Account"
@inject Context dbContext
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager navigationManager
@inject AuthenticationService authService
@code {
    private bool selectAccount = false;
    private List<Account>? Accounts;
    private Account? selectedAccount;
    public string TxtType = "password";

    protected override void OnInitialized()
    {
        var accountIdToCheck = 1;
        var isLoggedIn = authService.IsUserLoggedIn(accountIdToCheck);

        if (!isLoggedIn)
        {
            navigationManager.NavigateTo("/Forbidden"); // Redirect to Forbidden page if not logged in
        }

        LoadAccounts();
    }

    private void LoadAccounts()
    {
        Accounts = dbContext.Accounts.ToList();
    }

    private void SelectAccount(Account account)
    {
        selectedAccount = dbContext.Accounts
        .FirstOrDefault(s => s.AccountID == account.AccountID);
        selectAccount = true;
    }
}
<div class="main-content content container card shadow-lg custom-container">
    <div class="account-cards main-content ">
        @if (!selectAccount && Accounts != null)
        {

            @foreach (var account in Accounts)
            {
                <AccountCard Account="account" OnSelectAccount="() => SelectAccount(account)" />
            }
        }
    </div>
</div>
