@layout LoginLayout
@inject Context dbContext
@inject NavigationManager navigation
@inject IJSRuntime JSRuntime
@inject AuthenticationService authService

@page "/"

<PageTitle>Login</PageTitle>
<div class="background">
    <div class="login-container small">
        <div class="login-box text-center md">
            <div class="logo d-flex justify-content-lg-start">
                <img src="FDTC-LOGO2.png" alt="Logo" class="login-logo mb-4 align-content-end" />
            </div>
            <form @onsubmit="HandleLogin">
                <div class="d-flex flex-column align-items-center">
                    <div class="form-group w-100">
                        <input type="text" @bind="username" class="form-control shadow-none" placeholder="Username" />
                    </div>
                    <div class="form-group w-100 pb-3">
                        <input type="password" @bind="password" class="form-control shadow-none"
                            placeholder="Password" />
                    </div>
                </div>
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary">Sign In</button>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    
    private string username = "";
    private string password = "";

    private async Task HandleLogin()
    {
        var user = dbContext.Accounts.FirstOrDefault(u => u.UserName == username && u.PasswordHash == password);

        if (user != null)
        {
            authService.SetLoggedInUser(user); // Set the logged-in user
            navigation.NavigateTo("/HomePage");
        }
        else
        {
            username = "";
            password = "";
            await JSRuntime.InvokeVoidAsync("alert", "Invalid username or password.");
        }
    }
}